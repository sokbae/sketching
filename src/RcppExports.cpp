// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_count_sketch
NumericMatrix rcpp_count_sketch(NumericMatrix X, IntegerVector hv, IntegerVector gv, int m);
RcppExport SEXP _sketching_rcpp_count_sketch(SEXP XSEXP, SEXP hvSEXP, SEXP gvSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type hv(hvSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type gv(gvSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_count_sketch(X, hv, gv, m));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sketching_rcpp_count_sketch", (DL_FUNC) &_sketching_rcpp_count_sketch, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_sketching(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
